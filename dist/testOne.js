const{bold:bold,green:green,yellow:yellow}=require("@nexssp/ansi"),{subtest:subtest}=require("./subtest"),{error:error,header:header}=require("@nexssp/logdebug"),path=require("path"),fs=require("fs"),testOne=(e,{startFromTest:s=1,display:r=!1,stopOnError:t}={})=>{const n={file:e};let u;u=require(e),u.uniqueTestValues||(u.uniqueTestValues=["Nexss"]);[].length>0||u.omit;return u.uniqueTestValues.reduce(((r,o)=>{const i=require("os").tmpdir(),a=`Nexss-test-${Math.random().toString(36).substring(7)}`,l=path.join(i,a);n.testPath=l,fs.existsSync(l)||fs.mkdirSync(l),process.chdir(l),header(`file: ${green(e)}`);const d=subtest(u,{startFromTest:s,file:e,value:o,chdir:l,stopOnError:t});return r.concat(d)}),[])};module.exports={testOne:testOne};